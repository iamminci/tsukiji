// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from "next";
const { initializeApp, cert } = require("firebase-admin/app");
const {
  getFirestore,
  Timestamp,
  FieldValue,
} = require("firebase-admin/firestore");
const admin = require("firebase-admin");

if (process.env.FIREBASE_PRIVATE_KEY && admin.apps.length === 0) {
  initializeApp({
    credential: cert({
      projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
      privateKey: process.env.FIREBASE_PRIVATE_KEY.replace(/\\n/g, "\n"),
    }),
  });
}

const db = getFirestore();

// This handler supports both GET and POST requests.
// GET will return all orders.
// POST will attempt to create a new order and return the resulting ID.
export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<any>
) {
  if (req.method === "GET") {
    // fetch all orders
    const orders = await db.collection("orders").get();
    const ordersData = orders.docs.map((order: any) => ({
      id: order.id,
      ...order.data(),
    }));

    res.status(200).json(ordersData);
  } else if (req.method === "POST") {
    // add new order with an autogenerated ID
    // TODO: do some validation
    const doc = await db.collection("orders").add(req.body);

    res.status(200).json(doc.id);
  } else {
    res.status(400).json("Unable to handle request");
  }
}
